generator client {
  provider = "prisma-client-js"
  previewFeatures = ["nativeTypes"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  email         String    @unique @db.VarChar(100)
  password      String    @db.VarChar(100)
  access_token  String?   @db.VarChar(64)
  refresh_token String?   @db.VarChar(64)
  created_at    BigInt    @db.UnsignedBigInt
  updated_at    BigInt?   @db.UnsignedBigInt
  deleted_at    BigInt?   @db.UnsignedBigInt

  boxes Box[]
  settings Setting[]

  @@index([created_at])

  @@map("users")
}

model Box {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  user_id BigInt @db.UnsignedBigInt
  name String @db.VarChar(30)
  language_code String @db.VarChar(5)
  created_at BigInt @db.UnsignedBigInt
  updated_at BigInt? @db.UnsignedBigInt
  deleted_at BigInt? @db.UnsignedBigInt

  user User @relation(fields: [user_id], references: [id])

  cards Card[]

  @@index([created_at])
  @@unique([user_id, name])

  @@map("boxes")
}

model Card {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  box_id BigInt @db.UnsignedBigInt
  front String @db.VarChar(300)
  back Json
  type CardType
  voice_url String? @db.VarChar(3000)
  is_favorite Boolean @default(false)
  srs_interval Int
  ease_factor Decimal
  due_date BigInt @db.UnsignedBigInt
  created_at BigInt @db.UnsignedBigInt
  updated_at BigInt? @db.UnsignedBigInt
  deleted_at BigInt? @db.UnsignedBigInt

  box Box @relation(fields: [box_id], references: [id])
  reviews Review[]

  @@index([due_date])

  @@map("cards")
}

model Review {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  card_id BigInt @db.UnsignedBigInt
  rating ReviewRating
  duration Int
  reviewed_at BigInt @db.UnsignedBigInt

  card Card @relation(fields: [card_id], references: [id])

  @@map("reviews")
}

model Setting {
  id Int @id @default(autoincrement()) @db.TinyInt()
  user_id BigInt @db.UnsignedBigInt
  key String @db.VarChar(100)
  value String @db.VarChar(1000)
  created_at BigInt @db.UnsignedBigInt
  updated_at BigInt? @db.UnsignedBigInt

  user User @relation(fields: [user_id], references: [id])

  @@map("settings")
}

model PasswordReset {
  email String @unique @db.VarChar(100)
  token String @db.VarChar(100)
  created_at BigInt @db.UnsignedBigInt

  @@map("password_resets")
}

enum CardType {
  NOUN
  ADJ
  ADV
  VERB
}

enum ReviewRating {
  KNOW
  FORGET
}
